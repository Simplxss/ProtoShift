// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WeaponAwakenRsp.proto

package emu.protoshift.net.oldproto;

public final class WeaponAwakenRspOuterClass {
  private WeaponAwakenRspOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface WeaponAwakenRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:WeaponAwakenRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 retcode = 12;</code>
     * @return The retcode.
     */
    int getRetcode();

    /**
     * <code>map&lt;uint32, uint32&gt; old_affix_level_map = 13;</code>
     */
    int getOldAffixLevelMapCount();
    /**
     * <code>map&lt;uint32, uint32&gt; old_affix_level_map = 13;</code>
     */
    boolean containsOldAffixLevelMap(
        int key);
    /**
     * Use {@link #getOldAffixLevelMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getOldAffixLevelMap();
    /**
     * <code>map&lt;uint32, uint32&gt; old_affix_level_map = 13;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getOldAffixLevelMapMap();
    /**
     * <code>map&lt;uint32, uint32&gt; old_affix_level_map = 13;</code>
     */
    int getOldAffixLevelMapOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, uint32&gt; old_affix_level_map = 13;</code>
     */
    int getOldAffixLevelMapOrThrow(
        int key);

    /**
     * <code>map&lt;uint32, uint32&gt; cur_affix_level_map = 10;</code>
     */
    int getCurAffixLevelMapCount();
    /**
     * <code>map&lt;uint32, uint32&gt; cur_affix_level_map = 10;</code>
     */
    boolean containsCurAffixLevelMap(
        int key);
    /**
     * Use {@link #getCurAffixLevelMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getCurAffixLevelMap();
    /**
     * <code>map&lt;uint32, uint32&gt; cur_affix_level_map = 10;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getCurAffixLevelMapMap();
    /**
     * <code>map&lt;uint32, uint32&gt; cur_affix_level_map = 10;</code>
     */
    int getCurAffixLevelMapOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, uint32&gt; cur_affix_level_map = 10;</code>
     */
    int getCurAffixLevelMapOrThrow(
        int key);

    /**
     * <code>uint64 target_weapon_guid = 11;</code>
     * @return The targetWeaponGuid.
     */
    long getTargetWeaponGuid();

    /**
     * <code>uint32 target_weapon_awaken_level = 1;</code>
     * @return The targetWeaponAwakenLevel.
     */
    int getTargetWeaponAwakenLevel();

    /**
     * <code>uint64 avatar_guid = 9;</code>
     * @return The avatarGuid.
     */
    long getAvatarGuid();
  }
  /**
   * <pre>
   * Obf: BBBKJFJPFLK
   * </pre>
   *
   * Protobuf type {@code WeaponAwakenRsp}
   */
  public static final class WeaponAwakenRsp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:WeaponAwakenRsp)
      WeaponAwakenRspOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WeaponAwakenRsp.newBuilder() to construct.
    private WeaponAwakenRsp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WeaponAwakenRsp() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WeaponAwakenRsp();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.internal_static_WeaponAwakenRsp_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 13:
          return internalGetOldAffixLevelMap();
        case 10:
          return internalGetCurAffixLevelMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.internal_static_WeaponAwakenRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp.class, emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp.Builder.class);
    }

    public static final int RETCODE_FIELD_NUMBER = 12;
    private int retcode_ = 0;
    /**
     * <code>int32 retcode = 12;</code>
     * @return The retcode.
     */
    @java.lang.Override
    public int getRetcode() {
      return retcode_;
    }

    public static final int OLD_AFFIX_LEVEL_MAP_FIELD_NUMBER = 13;
    private static final class OldAffixLevelMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.internal_static_WeaponAwakenRsp_OldAffixLevelMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> oldAffixLevelMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetOldAffixLevelMap() {
      if (oldAffixLevelMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            OldAffixLevelMapDefaultEntryHolder.defaultEntry);
      }
      return oldAffixLevelMap_;
    }
    public int getOldAffixLevelMapCount() {
      return internalGetOldAffixLevelMap().getMap().size();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; old_affix_level_map = 13;</code>
     */
    @java.lang.Override
    public boolean containsOldAffixLevelMap(
        int key) {

      return internalGetOldAffixLevelMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getOldAffixLevelMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getOldAffixLevelMap() {
      return getOldAffixLevelMapMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; old_affix_level_map = 13;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, java.lang.Integer> getOldAffixLevelMapMap() {
      return internalGetOldAffixLevelMap().getMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; old_affix_level_map = 13;</code>
     */
    @java.lang.Override
    public int getOldAffixLevelMapOrDefault(
        int key,
        int defaultValue) {

      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetOldAffixLevelMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; old_affix_level_map = 13;</code>
     */
    @java.lang.Override
    public int getOldAffixLevelMapOrThrow(
        int key) {

      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetOldAffixLevelMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int CUR_AFFIX_LEVEL_MAP_FIELD_NUMBER = 10;
    private static final class CurAffixLevelMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.internal_static_WeaponAwakenRsp_CurAffixLevelMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> curAffixLevelMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetCurAffixLevelMap() {
      if (curAffixLevelMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            CurAffixLevelMapDefaultEntryHolder.defaultEntry);
      }
      return curAffixLevelMap_;
    }
    public int getCurAffixLevelMapCount() {
      return internalGetCurAffixLevelMap().getMap().size();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; cur_affix_level_map = 10;</code>
     */
    @java.lang.Override
    public boolean containsCurAffixLevelMap(
        int key) {

      return internalGetCurAffixLevelMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getCurAffixLevelMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getCurAffixLevelMap() {
      return getCurAffixLevelMapMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; cur_affix_level_map = 10;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, java.lang.Integer> getCurAffixLevelMapMap() {
      return internalGetCurAffixLevelMap().getMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; cur_affix_level_map = 10;</code>
     */
    @java.lang.Override
    public int getCurAffixLevelMapOrDefault(
        int key,
        int defaultValue) {

      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetCurAffixLevelMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; cur_affix_level_map = 10;</code>
     */
    @java.lang.Override
    public int getCurAffixLevelMapOrThrow(
        int key) {

      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetCurAffixLevelMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int TARGET_WEAPON_GUID_FIELD_NUMBER = 11;
    private long targetWeaponGuid_ = 0L;
    /**
     * <code>uint64 target_weapon_guid = 11;</code>
     * @return The targetWeaponGuid.
     */
    @java.lang.Override
    public long getTargetWeaponGuid() {
      return targetWeaponGuid_;
    }

    public static final int TARGET_WEAPON_AWAKEN_LEVEL_FIELD_NUMBER = 1;
    private int targetWeaponAwakenLevel_ = 0;
    /**
     * <code>uint32 target_weapon_awaken_level = 1;</code>
     * @return The targetWeaponAwakenLevel.
     */
    @java.lang.Override
    public int getTargetWeaponAwakenLevel() {
      return targetWeaponAwakenLevel_;
    }

    public static final int AVATAR_GUID_FIELD_NUMBER = 9;
    private long avatarGuid_ = 0L;
    /**
     * <code>uint64 avatar_guid = 9;</code>
     * @return The avatarGuid.
     */
    @java.lang.Override
    public long getAvatarGuid() {
      return avatarGuid_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (targetWeaponAwakenLevel_ != 0) {
        output.writeUInt32(1, targetWeaponAwakenLevel_);
      }
      if (avatarGuid_ != 0L) {
        output.writeUInt64(9, avatarGuid_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetCurAffixLevelMap(),
          CurAffixLevelMapDefaultEntryHolder.defaultEntry,
          10);
      if (targetWeaponGuid_ != 0L) {
        output.writeUInt64(11, targetWeaponGuid_);
      }
      if (retcode_ != 0) {
        output.writeInt32(12, retcode_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetOldAffixLevelMap(),
          OldAffixLevelMapDefaultEntryHolder.defaultEntry,
          13);
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (targetWeaponAwakenLevel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, targetWeaponAwakenLevel_);
      }
      if (avatarGuid_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, avatarGuid_);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetCurAffixLevelMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        curAffixLevelMap__ = CurAffixLevelMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, curAffixLevelMap__);
      }
      if (targetWeaponGuid_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(11, targetWeaponGuid_);
      }
      if (retcode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, retcode_);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetOldAffixLevelMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        oldAffixLevelMap__ = OldAffixLevelMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(13, oldAffixLevelMap__);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp)) {
        return super.equals(obj);
      }
      emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp other = (emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp) obj;

      if (getRetcode()
          != other.getRetcode()) return false;
      if (!internalGetOldAffixLevelMap().equals(
          other.internalGetOldAffixLevelMap())) return false;
      if (!internalGetCurAffixLevelMap().equals(
          other.internalGetCurAffixLevelMap())) return false;
      if (getTargetWeaponGuid()
          != other.getTargetWeaponGuid()) return false;
      if (getTargetWeaponAwakenLevel()
          != other.getTargetWeaponAwakenLevel()) return false;
      if (getAvatarGuid()
          != other.getAvatarGuid()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RETCODE_FIELD_NUMBER;
      hash = (53 * hash) + getRetcode();
      if (!internalGetOldAffixLevelMap().getMap().isEmpty()) {
        hash = (37 * hash) + OLD_AFFIX_LEVEL_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetOldAffixLevelMap().hashCode();
      }
      if (!internalGetCurAffixLevelMap().getMap().isEmpty()) {
        hash = (37 * hash) + CUR_AFFIX_LEVEL_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetCurAffixLevelMap().hashCode();
      }
      hash = (37 * hash) + TARGET_WEAPON_GUID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTargetWeaponGuid());
      hash = (37 * hash) + TARGET_WEAPON_AWAKEN_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getTargetWeaponAwakenLevel();
      hash = (37 * hash) + AVATAR_GUID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAvatarGuid());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Obf: BBBKJFJPFLK
     * </pre>
     *
     * Protobuf type {@code WeaponAwakenRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:WeaponAwakenRsp)
        emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.internal_static_WeaponAwakenRsp_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 13:
            return internalGetOldAffixLevelMap();
          case 10:
            return internalGetCurAffixLevelMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 13:
            return internalGetMutableOldAffixLevelMap();
          case 10:
            return internalGetMutableCurAffixLevelMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.internal_static_WeaponAwakenRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp.class, emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp.Builder.class);
      }

      // Construct using emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        retcode_ = 0;
        internalGetMutableOldAffixLevelMap().clear();
        internalGetMutableCurAffixLevelMap().clear();
        targetWeaponGuid_ = 0L;
        targetWeaponAwakenLevel_ = 0;
        avatarGuid_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.internal_static_WeaponAwakenRsp_descriptor;
      }

      @java.lang.Override
      public emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp getDefaultInstanceForType() {
        return emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp.getDefaultInstance();
      }

      @java.lang.Override
      public emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp build() {
        emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp buildPartial() {
        emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp result = new emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.retcode_ = retcode_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.oldAffixLevelMap_ = internalGetOldAffixLevelMap();
          result.oldAffixLevelMap_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.curAffixLevelMap_ = internalGetCurAffixLevelMap();
          result.curAffixLevelMap_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.targetWeaponGuid_ = targetWeaponGuid_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.targetWeaponAwakenLevel_ = targetWeaponAwakenLevel_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.avatarGuid_ = avatarGuid_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp) {
          return mergeFrom((emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp other) {
        if (other == emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp.getDefaultInstance()) return this;
        if (other.getRetcode() != 0) {
          setRetcode(other.getRetcode());
        }
        internalGetMutableOldAffixLevelMap().mergeFrom(
            other.internalGetOldAffixLevelMap());
        bitField0_ |= 0x00000002;
        internalGetMutableCurAffixLevelMap().mergeFrom(
            other.internalGetCurAffixLevelMap());
        bitField0_ |= 0x00000004;
        if (other.getTargetWeaponGuid() != 0L) {
          setTargetWeaponGuid(other.getTargetWeaponGuid());
        }
        if (other.getTargetWeaponAwakenLevel() != 0) {
          setTargetWeaponAwakenLevel(other.getTargetWeaponAwakenLevel());
        }
        if (other.getAvatarGuid() != 0L) {
          setAvatarGuid(other.getAvatarGuid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                targetWeaponAwakenLevel_ = input.readUInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 8
              case 72: {
                avatarGuid_ = input.readUInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 72
              case 82: {
                com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
                curAffixLevelMap__ = input.readMessage(
                    CurAffixLevelMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableCurAffixLevelMap().getMutableMap().put(
                    curAffixLevelMap__.getKey(), curAffixLevelMap__.getValue());
                bitField0_ |= 0x00000004;
                break;
              } // case 82
              case 88: {
                targetWeaponGuid_ = input.readUInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 88
              case 96: {
                retcode_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 96
              case 106: {
                com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
                oldAffixLevelMap__ = input.readMessage(
                    OldAffixLevelMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableOldAffixLevelMap().getMutableMap().put(
                    oldAffixLevelMap__.getKey(), oldAffixLevelMap__.getValue());
                bitField0_ |= 0x00000002;
                break;
              } // case 106
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int retcode_ ;
      /**
       * <code>int32 retcode = 12;</code>
       * @return The retcode.
       */
      @java.lang.Override
      public int getRetcode() {
        return retcode_;
      }
      /**
       * <code>int32 retcode = 12;</code>
       * @param value The retcode to set.
       * @return This builder for chaining.
       */
      public Builder setRetcode(int value) {

        retcode_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 retcode = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearRetcode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        retcode_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> oldAffixLevelMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetOldAffixLevelMap() {
        if (oldAffixLevelMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              OldAffixLevelMapDefaultEntryHolder.defaultEntry);
        }
        return oldAffixLevelMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetMutableOldAffixLevelMap() {
        if (oldAffixLevelMap_ == null) {
          oldAffixLevelMap_ = com.google.protobuf.MapField.newMapField(
              OldAffixLevelMapDefaultEntryHolder.defaultEntry);
        }
        if (!oldAffixLevelMap_.isMutable()) {
          oldAffixLevelMap_ = oldAffixLevelMap_.copy();
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return oldAffixLevelMap_;
      }
      public int getOldAffixLevelMapCount() {
        return internalGetOldAffixLevelMap().getMap().size();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; old_affix_level_map = 13;</code>
       */
      @java.lang.Override
      public boolean containsOldAffixLevelMap(
          int key) {

        return internalGetOldAffixLevelMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getOldAffixLevelMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getOldAffixLevelMap() {
        return getOldAffixLevelMapMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; old_affix_level_map = 13;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, java.lang.Integer> getOldAffixLevelMapMap() {
        return internalGetOldAffixLevelMap().getMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; old_affix_level_map = 13;</code>
       */
      @java.lang.Override
      public int getOldAffixLevelMapOrDefault(
          int key,
          int defaultValue) {

        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetOldAffixLevelMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; old_affix_level_map = 13;</code>
       */
      @java.lang.Override
      public int getOldAffixLevelMapOrThrow(
          int key) {

        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetOldAffixLevelMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearOldAffixLevelMap() {
        bitField0_ = (bitField0_ & ~0x00000002);
        internalGetMutableOldAffixLevelMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; old_affix_level_map = 13;</code>
       */
      public Builder removeOldAffixLevelMap(
          int key) {

        internalGetMutableOldAffixLevelMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
          getMutableOldAffixLevelMap() {
        bitField0_ |= 0x00000002;
        return internalGetMutableOldAffixLevelMap().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; old_affix_level_map = 13;</code>
       */
      public Builder putOldAffixLevelMap(
          int key,
          int value) {


        internalGetMutableOldAffixLevelMap().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; old_affix_level_map = 13;</code>
       */
      public Builder putAllOldAffixLevelMap(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableOldAffixLevelMap().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000002;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> curAffixLevelMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetCurAffixLevelMap() {
        if (curAffixLevelMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              CurAffixLevelMapDefaultEntryHolder.defaultEntry);
        }
        return curAffixLevelMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
          internalGetMutableCurAffixLevelMap() {
        if (curAffixLevelMap_ == null) {
          curAffixLevelMap_ = com.google.protobuf.MapField.newMapField(
              CurAffixLevelMapDefaultEntryHolder.defaultEntry);
        }
        if (!curAffixLevelMap_.isMutable()) {
          curAffixLevelMap_ = curAffixLevelMap_.copy();
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return curAffixLevelMap_;
      }
      public int getCurAffixLevelMapCount() {
        return internalGetCurAffixLevelMap().getMap().size();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; cur_affix_level_map = 10;</code>
       */
      @java.lang.Override
      public boolean containsCurAffixLevelMap(
          int key) {

        return internalGetCurAffixLevelMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getCurAffixLevelMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getCurAffixLevelMap() {
        return getCurAffixLevelMapMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; cur_affix_level_map = 10;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, java.lang.Integer> getCurAffixLevelMapMap() {
        return internalGetCurAffixLevelMap().getMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; cur_affix_level_map = 10;</code>
       */
      @java.lang.Override
      public int getCurAffixLevelMapOrDefault(
          int key,
          int defaultValue) {

        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetCurAffixLevelMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; cur_affix_level_map = 10;</code>
       */
      @java.lang.Override
      public int getCurAffixLevelMapOrThrow(
          int key) {

        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetCurAffixLevelMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearCurAffixLevelMap() {
        bitField0_ = (bitField0_ & ~0x00000004);
        internalGetMutableCurAffixLevelMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; cur_affix_level_map = 10;</code>
       */
      public Builder removeCurAffixLevelMap(
          int key) {

        internalGetMutableCurAffixLevelMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
          getMutableCurAffixLevelMap() {
        bitField0_ |= 0x00000004;
        return internalGetMutableCurAffixLevelMap().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; cur_affix_level_map = 10;</code>
       */
      public Builder putCurAffixLevelMap(
          int key,
          int value) {


        internalGetMutableCurAffixLevelMap().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; cur_affix_level_map = 10;</code>
       */
      public Builder putAllCurAffixLevelMap(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableCurAffixLevelMap().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000004;
        return this;
      }

      private long targetWeaponGuid_ ;
      /**
       * <code>uint64 target_weapon_guid = 11;</code>
       * @return The targetWeaponGuid.
       */
      @java.lang.Override
      public long getTargetWeaponGuid() {
        return targetWeaponGuid_;
      }
      /**
       * <code>uint64 target_weapon_guid = 11;</code>
       * @param value The targetWeaponGuid to set.
       * @return This builder for chaining.
       */
      public Builder setTargetWeaponGuid(long value) {

        targetWeaponGuid_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 target_weapon_guid = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetWeaponGuid() {
        bitField0_ = (bitField0_ & ~0x00000008);
        targetWeaponGuid_ = 0L;
        onChanged();
        return this;
      }

      private int targetWeaponAwakenLevel_ ;
      /**
       * <code>uint32 target_weapon_awaken_level = 1;</code>
       * @return The targetWeaponAwakenLevel.
       */
      @java.lang.Override
      public int getTargetWeaponAwakenLevel() {
        return targetWeaponAwakenLevel_;
      }
      /**
       * <code>uint32 target_weapon_awaken_level = 1;</code>
       * @param value The targetWeaponAwakenLevel to set.
       * @return This builder for chaining.
       */
      public Builder setTargetWeaponAwakenLevel(int value) {

        targetWeaponAwakenLevel_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 target_weapon_awaken_level = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetWeaponAwakenLevel() {
        bitField0_ = (bitField0_ & ~0x00000010);
        targetWeaponAwakenLevel_ = 0;
        onChanged();
        return this;
      }

      private long avatarGuid_ ;
      /**
       * <code>uint64 avatar_guid = 9;</code>
       * @return The avatarGuid.
       */
      @java.lang.Override
      public long getAvatarGuid() {
        return avatarGuid_;
      }
      /**
       * <code>uint64 avatar_guid = 9;</code>
       * @param value The avatarGuid to set.
       * @return This builder for chaining.
       */
      public Builder setAvatarGuid(long value) {

        avatarGuid_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 avatar_guid = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearAvatarGuid() {
        bitField0_ = (bitField0_ & ~0x00000020);
        avatarGuid_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:WeaponAwakenRsp)
    }

    // @@protoc_insertion_point(class_scope:WeaponAwakenRsp)
    private static final emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp();
    }

    public static emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WeaponAwakenRsp>
        PARSER = new com.google.protobuf.AbstractParser<WeaponAwakenRsp>() {
      @java.lang.Override
      public WeaponAwakenRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<WeaponAwakenRsp> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WeaponAwakenRsp> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public emu.protoshift.net.oldproto.WeaponAwakenRspOuterClass.WeaponAwakenRsp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_WeaponAwakenRsp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_WeaponAwakenRsp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_WeaponAwakenRsp_OldAffixLevelMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_WeaponAwakenRsp_OldAffixLevelMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_WeaponAwakenRsp_CurAffixLevelMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_WeaponAwakenRsp_CurAffixLevelMapEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025WeaponAwakenRsp.proto\"\363\002\n\017WeaponAwaken" +
      "Rsp\022\017\n\007retcode\030\014 \001(\005\022C\n\023old_affix_level_" +
      "map\030\r \003(\0132&.WeaponAwakenRsp.OldAffixLeve" +
      "lMapEntry\022C\n\023cur_affix_level_map\030\n \003(\0132&" +
      ".WeaponAwakenRsp.CurAffixLevelMapEntry\022\032" +
      "\n\022target_weapon_guid\030\013 \001(\004\022\"\n\032target_wea" +
      "pon_awaken_level\030\001 \001(\r\022\023\n\013avatar_guid\030\t " +
      "\001(\004\0327\n\025OldAffixLevelMapEntry\022\013\n\003key\030\001 \001(" +
      "\r\022\r\n\005value\030\002 \001(\r:\0028\001\0327\n\025CurAffixLevelMap" +
      "Entry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001B\035\n" +
      "\033emu.protoshift.net.oldprotob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_WeaponAwakenRsp_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_WeaponAwakenRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_WeaponAwakenRsp_descriptor,
        new java.lang.String[] { "Retcode", "OldAffixLevelMap", "CurAffixLevelMap", "TargetWeaponGuid", "TargetWeaponAwakenLevel", "AvatarGuid", });
    internal_static_WeaponAwakenRsp_OldAffixLevelMapEntry_descriptor =
      internal_static_WeaponAwakenRsp_descriptor.getNestedTypes().get(0);
    internal_static_WeaponAwakenRsp_OldAffixLevelMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_WeaponAwakenRsp_OldAffixLevelMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_WeaponAwakenRsp_CurAffixLevelMapEntry_descriptor =
      internal_static_WeaponAwakenRsp_descriptor.getNestedTypes().get(1);
    internal_static_WeaponAwakenRsp_CurAffixLevelMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_WeaponAwakenRsp_CurAffixLevelMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
